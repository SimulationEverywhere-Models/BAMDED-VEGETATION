[top]
components : Vegetation

[Vegetation]
type : cell
dim : (50, 50)
delay : transport
defaultDelayTime  : 1000
border : wrapped 

%direct neighbors
neighbors : Vegetation(-1,1) Vegetation(-1,0) Vegetation(-1,-1) Vegetation(0,-1)
neighbors : Vegetation(0,1) Vegetation(0,0) Vegetation(1,-1) Vegetation(1,1) Vegetation(1,0)
%extended neighbors
neighbors : Vegetation(-2,2) Vegetation(-2,1) Vegetation(-2,0) Vegetation(-2,-1) Vegetation(-2,-2)
neighbors : Vegetation(-1,2) Vegetation(0,2) Vegetation(1,2) Vegetation(2,2)
neighbors : Vegetation(2,1) Vegetation(2,0) Vegetation(2,-1) Vegetation(2,-2) Vegetation(-1,-2) Vegetation(0,-2)

initialvalue : 0
initialrowvalue :  0     11000000000000000000000011000000000000000000000011
initialrowvalue :  1     00110000000000000000000011000000000000000000001100
initialrowvalue :  2     00001100000000000000000011000000000000000000110000
initialrowvalue :  3     00000011000000000000000011000000000000000011000000
initialrowvalue :  4     00000000110000000000000011000000000000001100000000
initialrowvalue :  5     00000000001100000000000011000000000000110000000000
initialrowvalue :  6     00000000000011000000000011000000000011000000000000
initialrowvalue :  7     00000000000000110000000011000000001100000000000000
initialrowvalue :  8     00000000000000001100000011000000110000000000000000
initialrowvalue :  9     00000000000000000011000011000011000000000000000000
initialrowvalue : 10     00000000000000000000110011001100000000000000000000
initialrowvalue : 11     00000000000000000000001111110000000000000000000000
initialrowvalue : 12     11111111111111111111111111111111111111111111111111
initialrowvalue : 13     00000000000000000000001111110000000000000000000000
initialrowvalue : 14     00000000000000000000011011011000000000000000000000
initialrowvalue : 15     00000000000000000000110011001100000000000000000000
initialrowvalue : 16     00000000000000000001100011000110000000000000000000
initialrowvalue : 17     00000000000000000011000011000011000000000000000000
initialrowvalue : 18     00000000000000001100000011000000110000000000000000
initialrowvalue : 19     00000000000000011000000011000000011000000000000000
initialrowvalue : 20     00000000000000110000000011000000001100000000000000
initialrowvalue : 21     00000000000001100000000011000000000110000000000000
initialrowvalue : 22     00000000000011000000000011000000000011000000000000
initialrowvalue : 23     00000000000110000000000011000000000001100000000000
initialrowvalue : 24     00000000001100000000000011000000000000110000000000
initialrowvalue : 25     00000000011000000000000011000000000000011000000000
initialrowvalue : 26     00000000110000000000000011000000000000001100000000
initialrowvalue : 27     00000001100000000000000011000000000000000110000000
initialrowvalue : 28     00000011000000000000000011000000000000000011000000
initialrowvalue : 29     00000110000000000000000011000000000000000001100000
initialrowvalue : 30     00001100000000000000000011000000000000000000110000
initialrowvalue : 31     00011000000000000000000011000000000000000000011000
initialrowvalue : 32     00110000000000000000000011000000000000000000001100
initialrowvalue : 33     01100000000000000000000011000000000000000000000110
initialrowvalue : 34     11111111111111111111111111111111111111111111111111
initialrowvalue : 35     01100000000000000000000011000000000000000000000110
initialrowvalue : 36     00110000000000000000000011000000000000000000001100
initialrowvalue : 37     00011000000000000000000011000000000000000000011000
initialrowvalue : 38     00001100000000000000000011000000000000000000110000
initialrowvalue : 39     00000110000000000000000011000000000000000001100000
initialrowvalue : 40     00000011000000000000000011000000000000000011000000
initialrowvalue : 41     00000001100000000000000011000000000000000110000000
initialrowvalue : 42     00000000110000000000000011000000000000001100000000
initialrowvalue : 43     00000000011000000000000011000000000000011000000000
initialrowvalue : 44     00000000001100000000000011000000000000110000000000
initialrowvalue : 45     00000000000110000000000011000000000001100000000000
initialrowvalue : 46     00000000000011000000000011000000000011000000000000
initialrowvalue : 47     00000000000001100000000011000000000110000000000000
initialrowvalue : 48     00000000000000110000000011000000001100000000000000
initialrowvalue : 49     00000000000000011000000011000000011000000000000000

localtransition : update_rule

[update_rule]
%if empty, become full if receiving 60% of rainfall
rule : 1 1000 { (0,0) = 0 and (-1,1)+(0,1)+(1,1)+(-1,0)+(1,0)+(0,-1)+(((-1,2)+(0,2)+(1,2)+(-2,1)+(-2,0)+(2,1)+(2,0))/2) >= 5 }
%and ((-1,1)+(0,1)+(1,1)+(-1,0)+(1,0)+(0,-1))+(((-1,2)+(0,2)+(1,2)+(-2,1)+(-2,0)+(2,1)+(2,0))/2) >= 5 }

%if full, become empty if receiving less than 195% of rainfall
rule : 0 1000 { (0,0) = 1 and (-1,1)+(0,1)+(1,1)+(-1,0)+(1,0)+(0,-1)+(((-1,2)+(0,2)+(1,2)+(-2,1)+(-2,0)+(2,1)+(2,0))/2)+(9+(((-1,1)+(0,1)+(1,1))*-3)) < 9.5 }
%and ((-1,1)+(0,1)+(1,1)+(-1,0)+(1,0)+(0,-1))+(((-1,2)+(0,2)+(1,2)+(-2,1)+(-2,0)+(2,1)+(2,0))/2)+(9-(((-1,1)+(0,1)+(1,1))*3)) < 10 }

%too much water rule: if full, become empty if receiving more than 300% of rainfall
%rule : 0 1000 { (0,0) = 1 and (-1,1)+(0,1)+(1,1)+(-1,0)+(1,0)+(0,-1)+(((-1,2)+(0,2)+(1,2)+(-2,1)+(-2,0)+(2,1)+(2,0))/2)+(9+(((-1,1)+(0,1)+(1,1))*-3)) > 15 }

%else, don't change
rule : { (0,0) } 1000 { t }













































[reproduction]
rule : { 1 } 1000 { (0,0,0) = 0 and (-1,1,0)= 1 and (-1,1,5) > 50 }
rule : { 1 } 1000 { (0,0,0) =0 and (-1,0,0)= 1 and (-1,0,5) > 50 }
rule : { 1 } 1000 { (0,0,0) =0 and (-1,-1,0)= 1 and (-1,-1,5) > 50 }
rule : { 1 } 1000 { (0,0,0) =0 and (0,1,0)= 1 and (0,1,5) > 50 }
rule : { 1 } 1000 { (0,0,0) =0 and (0,-1,0)= 1 and (0,-1,5) > 50 }
rule : { 1 } 1000 { (0,0,0) =0 and (1,1,0)= 1 and (1,1,5) > 50 }
rule : { 1 } 1000 { (0,0,0) =0 and (1,0,0)= 1 and (1,0,5) > 50 }
rule : { 1 } 1000 { (0,0,0) =0 and (1,-1,0)= 1 and (1,-1,5) > 50 }

rule : { 2 } 1000 { (0,0,0) =0 and (-1,1,0)= 2 and (-1,1,5) > 55 }
rule : { 2 } 1000 { (0,0,0) =0 and (-1,0,0)= 2 and (-1,0,5) > 55 }
rule : { 2 } 1000 { (0,0,0) =0 and (-1,-1,0)= 2 and (-1,-1,5) > 55 }
rule : { 2 } 1000 { (0,0,0) =0 and (0,1,0)= 2 and (0,1,5) > 55 }
rule : { 2 } 1000 { (0,0,0) =0 and (0,-1,0)= 2 and (0,-1,5) > 55 }
rule : { 2 } 1000 { (0,0,0) =0 and (1,1,0)= 2 and (1,1,5) > 55 }
rule : { 2 } 1000 { (0,0,0) =0 and (1,0,0)= 2 and (1,0,5) > 55 }
rule : { 2 } 1000 { (0,0,0) =0 and (1,-1,0)= 2 and (1,-1,5) > 55 }

rule : { 3 } 1000 { (0,0,0) =0 and (-1,1,0)= 3 and (-1,1,5) > 40 }
rule : { 3 } 1000 { (0,0,0) =0 and (-1,0,0)= 3 and (-1,0,5) > 40 }
rule : { 3 } 1000 { (0,0,0) =0 and (-1,-1,0)= 3 and (-1,-1,5) > 40 }
rule : { 3 } 1000 { (0,0,0) =0 and (0,1,0)= 3 and (0,1,5) > 40 }
rule : { 3 } 1000 { (0,0,0) =0 and (0,-1,0)= 3 and (0,-1,5) > 40 }
rule : { 3 } 1000 { (0,0,0) =0 and (1,1,0)= 3 and (1,1,5) > 40 }
rule : { 3 } 1000 { (0,0,0) =0 and (1,0,0)= 3 and (1,0,5) > 40 }
rule : { 3 } 1000 { (0,0,0) =0 and (1,-1,0)= 3 and (1,-1,5) > 40 }

rule : { (0,0,0) } 1000 { t }

[update_height]
% growing rule for locast 
rule : { (0,0,0) + 5 } 1000 { (0,0,-1) >= 5 and  (0,0,-2) >= 70 and (0,0,-3) >= 80 and (0,0,-4) >= 5 and (0,0,-5) = 1 and (0,0,0) < 75  }
% dying rule for locast 
rule : { 0 } 1000 { (0,0,-1) < 5 or  (0,0,-2) < 70 or (0,0,-3) < 80 or (0,0,-4) < 5 and (0,0,-5) = 1 and (0,0,0) >0  }

% growing rule for pine 
rule : { (0,0,0) + 4 } 1000 { (0,0,-1) >= 3 and  (0,0,-2) >= 80 and (0,0,-3) >= 75 and (0,0,-4) >= 2 and (0,0,-5) = 2 and (0,0,0) < 85  }

% dying rule for pine 
rule : { 0 } 1000 { (0,0,-1) < 3 or  (0,0,-2) < 80 or (0,0,-3) < 75 or (0,0,-4) < 2 and (0,0,-5) = 2 and (0,0,0) > 0  }


% growing rule for oak 
rule : { (0,0,0) + 6 } 1000 { (0,0,-1) >= 4 and  (0,0,-2) >= 95 and (0,0,-3) >= 90 and (0,0,-4) >= 5 and (0,0,-5) = 3 and (0,0,0) < 60  }

% dying rule for oak 
rule : { 0 } 1000 { (0,0,-1) < 4 or  (0,0,-2) < 95 or (0,0,-3) < 90 or (0,0,-4) < 5 and (0,0,-5) = 3 and (0,0,0) > 0  }


rule : { (0,0,0) } 1000 { t } 
 
[update_rule]
rule : { (0,0,0) } 1000 { t }

